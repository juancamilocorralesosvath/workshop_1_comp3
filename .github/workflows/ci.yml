name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, test ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        bun-version: ['latest']
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js (for Jest compatibility)
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup Bun ${{ matrix.bun-version }}
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ matrix.bun-version }}

    - name: Install dependencies with Bun
      run: bun install

    - name: Generate package-lock for Jest compatibility
      run: npm install --package-lock-only

    - name: Install npm dependencies for Jest
      run: npm ci

    - name: Create test environment file
      run: |
        echo "NODE_ENV=test" > .env
        echo "MONGO_URI=mongodb://localhost:27017/workshop_test" >> .env
        echo "JWT_SECRET=test-jwt-secret-key" >> .env
        echo "JWT_EXPIRES_IN=1h" >> .env

    - name: Run tests with coverage
      run: npm run ci:test
      env:
        NODE_ENV: test
        MONGO_URI: mongodb://localhost:27017/workshop_test
        JWT_SECRET: test-jwt-secret-key
        JWT_EXPIRES_IN: 1h

    - name: Check coverage threshold
      run: |
        if [ -f coverage/lcov.info ]; then
          echo " Coverage report generated successfully"
        else
          echo " Coverage report not found"
          exit 1
        fi

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Build application
      run: bun run build

